name: Deploy to EC2

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Node Js
        uses: actions/setup-node@v4
        with:
          node-version: 'v20.12.0'

      - name: Install Dependencies
        run: npm install --frozen-lockfile

      #- name: Build App
      # run: npm run build

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Node Js
        uses: actions/setup-node@v4
        with:
          node-version: 'v20.12.0'

      - name: Install Dependencies
        run: npm install --frozen-lockfile

      #- name: Build App
      #  run: npm run build

      - name: Configure SSH
        env:
          SSH_PRIVATE_KEY: ${{secrets.EC2_SSH_PRIVATE_KEY}}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{secrets.EC2_HOST}} >> ~/.ssh/known_hosts

      - name: Deploy to EC2
        env:
          EC2_HOST: ${{secrets.EC2_HOST}}
          EC2_USER: ${{secrets.EC2_USER}}
        run: |
          # Create deployment directory
          ssh "$EC2_USER@$EC2_HOST" "mkdir -p ~/app"

          # Copy files to EC2 instance
          rsync -avz \
            --exclude='.git' \
            --exclude='node_modules' \
            --exclude='.github' \
            ./ "$EC2_USER@$EC2_HOST:~/app/"

          # Install production Dependencies on EC2
          ssh "$EC2_USER@$EC2_HOST" "cd ~/app && npm install --frozen-lockfile"

          # Stop existing PM2 process if it exists
          ssh "$EC2_USER@$EC2_HOST" "pm2 delete nodejs-app || true"

          # Start the application with PM2
          ssh "$EC2_USER@$EC2_HOST" "cd ~/app && pm2 start src/server.ts --name nodejs-app"
